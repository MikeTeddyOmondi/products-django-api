services:
  web:
    image: ranckosolutionsinc/products-django-api:lts
    container_name: products-django-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - products_django_api_static:/src/static
      # - ./static:/src/static
    depends_on:
      - postgres
    networks:
      - products-service
  postgres:
    image: postgres:17-alpine
    container_name: products-django-api-database
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 54320:5432
    volumes:
      - products_django_api_pg_data:/var/lib/postgresql/data
      # - ./db/pg_data:/var/lib/postgresql/data
      - /mnt/c/Users/ADMIN/src-code/python/products_django_api/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - products-service
  pgadmin:
    container_name: products-django-api-database-ui
    image: dpage/pgadmin4:8.5
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      # PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - 5555:80
    networks:
      - products-service
    restart: unless-stopped
    depends_on:
      - postgres
volumes:
  pgadmin:
  products_django_api_static:
  products_django_api_pg_data:
networks:
  products-service: 
    name: products-service
    driver: bridge